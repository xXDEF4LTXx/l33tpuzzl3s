# You are given two strings s and t.
# String t is generated by random shuffling string s and then add one more letter at a random position.
# Return the letter that was added to t.

# Example 1:
# Input: s = "abcd", t = "abcde"
# Output: "e"
# Explanation: 'e' is the letter that was added.

# Example 2:
# Input: s = "", t = "y"
# Output: "y"

# Constraints:
# 0 <= s.length <= 1000
# t.length == s.length + 1
# s and t consist of lowercase English letters.

class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        # Create a list of the letters in each string and a list of the letters in the alphabet
        s_list = list(s); t_list = list(t); letters = list('abcdefghijklmnopqrstuvwxyz')
        # Make sure the strings are within the constraints and all letters in the strings are lowercase letters
        if len(s) >= 0 and len(s) <= 1000 and len(t) == len(s) + 1 and all(letter in letters for letter in s_list) and all(letter in letters for letter in t_list):
            # Iterate through the letters in the first string and remove the letter from the second string if it is in the second string
            for letter in s_list:
                if letter in t_list: t_list.pop(t_list.index(letter))
            # Return the remaining letter in the second string
            return ''.join(t_list)

# Tests
        
solution = Solution()

s = "abcd"
t = "abcde"
expected_output = "e"
assert solution.findTheDifference(s, t) == expected_output

s = ""
t = "y"
expected_output = "y"
assert solution.findTheDifference(s, t) == expected_output

s = "a"
t = "aa"
expected_output = "a"
assert solution.findTheDifference(s, t) == expected_output

s = "ae"
t = "aea"
expected_output = "a"
assert solution.findTheDifference(s, t) == expected_output

print("All tests passed")

